#TimeComplexity - O(n)
#Space Complexity = O(1)
class Solution:
    def rob(self, nums: list[int]) -> int:
        if not nums:
            return 0
        if len(nums) == 1:
            return nums[0]
        prev_2 = nums[0]
        prev_1 = max(nums[0], nums[1])
        for i in range(2, len(nums)):
            current = max(prev_1, prev_2 + nums[i])
            prev_2 = prev_1
            prev_1 = current
        
        return prev_1